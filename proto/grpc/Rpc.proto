syntax = "proto3";

package eos.rpc;

option java_multiple_files = true;
option java_package = "io.grpc.eos.rpc";
option java_outer_classname = "EosProto";
option objc_class_prefix = "EOS";

service Eos {
	// Replies to a ping
	rpc Ping (PingRequest) returns (PingReply) {}	

        // Replies to MD requests with a stream 
	rpc MD (MDRequest) returns (stream MDResponse) {}
}

message PingRequest {
	string message = 1;
	string authkey = 2;
}

message PingReply {
	string message = 1;
}

message Time {
	uint64 sec = 1;
	uint64 n_sec = 2;
}

message Checksum {
	bytes value = 1;
	string type = 2;
}

message FileMdProto {
	uint64 id = 1;
	uint64 cont_id = 2;
	uint64 uid = 3;
	uint64 gid = 4;
	uint64 size = 5;
	uint32 layout_id = 6;
	uint32 flags = 7;
	bytes name = 8;
	bytes link_name = 9;
	Time ctime = 10; // change time
	Time mtime = 11; // modification time
	Checksum checksum =12;
	repeated uint32 locations = 13;
	repeated uint32 unlink_locations = 14;
	map<string, bytes> xattrs = 15;
	bytes path = 16;
}

message ContainerMdProto {
	uint64 id = 1;
	uint64 parent_id = 2;
	uint64 uid = 3;
	uint64 gid = 4;
	int64 tree_size = 6;
	uint32 mode = 5;
	uint32 flags = 7;
	bytes name = 8;
	Time ctime = 9;  // change time
	Time mtime = 10; // modification time
	Time stime = 11; // sync time
	map<string, bytes> xattrs = 12;
	bytes path = 13;
}


enum TYPE { FILE = 0; CONTAINER = 1; LISTING = 2;}	

message MDRequest {
	TYPE type = 1;
        bytes path = 2;
	fixed64 id = 3;
	fixed64 ino = 4;
	string authkey = 5;
}

message MDResponse {
	TYPE type = 1;
	FileMdProto fmd = 2;
	ContainerMdProto cmd = 3;
}

